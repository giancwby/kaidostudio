---
interface Props {
    projectId?: string;
}
const { projectId } = Astro.props

import { getCollection } from "astro:content";

const allProjects = await getCollection("projects");
const relatedProjects = await getCollection('projects', ({ id }) => {
    return id !== projectId
});

---

{projectId == null ? (
    <div class="grid" id="gallery">
        {allProjects.map((project) =>
            <a href={`/projects/${project.slug}/`}>
                <video src={project.data.video.desktopUrl} autoplay muted loop playsinline></video>
            </a>
        )}
    </div>
) : (
    <div class="grid" id="gallery">
        {relatedProjects.map((project) =>
            <a href={`/projects/${project.slug}/`}>
                <video src={project.data.video.desktopUrl} autoplay muted loop playsinline></video>
            </a>
        )}
    </div>
)}



<style>
    .grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 16px;

        @media (width > 431px) {
            grid-template-columns: repeat(2, 1fr);
        }

        @media (width > 1024px) {
            grid-template-columns: repeat(3, 1fr);
        }

        >a {
            transition: var(--transition);

            &:hover {
                transform: translateY(-5px) !important;
            }

            >video {
                width: 100%;
                border: 1px solid var(--purple);
            }
        }
    }
</style>

<script>
    //@ts-nocheck
    const mobileQuery = window.matchMedia('(max-width: 431px)')

    if (mobileQuery.matches) {
        let tl = gsap.timeline({
            scrollTrigger: {
                trigger: "#gallery",
                start: "top bottom",
                end: "bottom bottom",
                scrub: true,
                id: "scrub"
            },
            defaults: {ease:"expo.out"} 
        })

        tl.fromTo('#gallery > a', {x:-200, opacity: 0}, {x:0, opacity: 1, stagger: .5})
    }

    else {
        let tl = gsap.timeline({
            scrollTrigger: {
                trigger: "#gallery",
                start: "10% 80%"
            }
        })
        
        tl.fromTo('#gallery > a', {y:-100, opacity: 0}, {y:0, opacity: 1, duration: 1, ease: 'power4.out'})
    }
</script>