---
import Layout from "./Layout.astro";
import Button from "../components/Button.astro";
import Gallery from "../components/Gallery.astro";

const {frontmatter, thisProjectId} = Astro.props
---

<Layout title={frontmatter.title}>
    <section class="project" id="project">
        <div class="box">
            <h1>{frontmatter.title}</h1>
            <div class="project-description"><slot/></div>
            <video src={frontmatter.video.desktopUrl} autoplay loop muted playsinline class="video--desktop"></video>
            <div class="list">
                <div class="item">
                    <p class="bold">What I Did</p>
                    <p>{frontmatter.service}</p>
                </div>
                <div class="item">
                    <p class="bold">Type</p>
                    <p>{frontmatter.type}</p>
                </div>
                <div class="item">
                    <p class="bold">Industry</p>
                    <p>{frontmatter.industry}</p>
                </div>
            </div>
            <video src={frontmatter.video.mobileUrl} autoplay loop muted playsinline class="video--mobile"></video>
            <Button href={frontmatter.websiteUrl} text="Visit Site" divClass="project-button"/ target="_blank">
        </div>
    </section>
    <section class="gallery">
        <div class="box">
            <Gallery projectId={thisProjectId}/>
        </div>
    </section>
</Layout>

<style is:global>
    .project-button {
        grid-row: 5/6;
        grid-column: 1/2;
        align-self: end;

        @media (width > 431px) {
            grid-column: 2/3;
            grid-row: 4/5;
            justify-self: start;
        }
    
        @media (width > 1024px) {
            transform: translateY(-5px) !important;
        }
    }

    .project-description {
        >p>a {
            color: var(--mint);
            text-decoration: underline;
            transition: var(--transition);
            cursor: url('/icons/pointer-emerald.png'), default;

            &:hover {
                color: var(--purple);
            }
        }
    }
</style>

<style>
    .project {
        @media (width > 1024px) {
            display: flex;
            justify-content: center;
        }

        >.box {
            display: grid;
            grid-template-columns: 1fr 1fr;
            padding: 40px 20px 80px 20px;
            row-gap: 56px;
            column-gap: 40px;

            @media (width > 431px) {
                grid-template-columns: auto 461px 66px 126.5px auto;
                column-gap: 0px;
                padding: 80px 40px 80px 40px;
            }

            @media (width > 1024px) {
                width: 1280px;
                padding: 80px;
            }
            
            >h1 {
                font-size: var(--h4);
                grid-column: 1/3;
                grid-row: 1/2;

                @media (width > 431px) {
                    grid-column: 1/6;
                    grid-row: 2/3;
                    font-size: var(--h2);
                    text-align: center;
                }
            }

            >.project-description {
                font-size: var(--large-body);
                grid-column: 1/3;
                grid-row: 2/3;
                text-wrap: balance;

                @media (width > 431px) {
                    grid-column: 2/4;
                    grid-row: 3/4;
                    width: 90%;
                }
            }
    
            >video {
                width: 100%;
                border: 1px solid var(--purple);
            }

            >.video--desktop {
                grid-row: 3/4;
                grid-column: 1/3;

                @media (width > 431px) {
                    grid-column: 2/3;
                    grid-row: 1/2;

                }
            }

            >.list {
                display: flex;
                flex-direction: column;
                gap: 24px;
                grid-row: 4/5;
                grid-column: 1/2;

                @media (width > 431px) {
                    grid-column: 4/5;
                    grid-row: 3/5;
                    justify-content: space-between;
                }

                >.item {
                    display: flex;
                    flex-direction: column;
                    gap: 4px;

                    >p:nth-child(1) {
                        font-size: var(--small-body);
                        text-transform: uppercase;
                    }

                    >p:nth-child(2) {
                        font-size: var(--large-body);
                    }
                }
            }

            >.video--mobile {
                grid-row: 4/6;
                grid-column: 2/3;

                @media (width > 431px) {
                    grid-column: 4/5;
                    grid-row: 1/2;

                }
            }
        }
    }

    .gallery {
        @media (width > 1024px) {
            display: flex;
            justify-content: center;
        }

        >.box {
            padding: 40px 20px 80px 20px;
    
            @media (width > 431px) {
                padding: 80px 40px 160px 40px;
            }
    
            @media (width > 1024px) {
                width: 1280px;
            }
        }
    }
</style>

<script>
    //@ts-nocheck
    const mobileQuery = window.matchMedia('(max-width: 431px)')
    
    if (mobileQuery.matches) {
        gsap.fromTo('#project > .box > *', {y:-200, opacity: 0}, {y:0, opacity: 1, duration: 3, ease:"expo.out"})
    }

    else {
        gsap.fromTo('#project > .box > *', {y:-200, opacity: 0}, {y:0, opacity: 1, duration: 2, ease:"expo.out"})
    } 
</script>