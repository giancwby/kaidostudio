---
//props
interface Props {
	title: string;
}

const { title } = Astro.props;

//style imports
import '../styles/global.css';

//seo
import { SEO } from "astro-seo";

//components
import Nav from '../components/Nav.astro';
import CTA from '../components/CTA.astro';
import Footer from '../components/Footer.astro';
import Preloader from '../components/Preloader.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Kaido Studio | {title}</title>
		<SEO
			title={title}
			description="Kaido Studio is a web design and development studio based in Manila, Philippines."
			openGraph={{
				basic: {
				title: title,
				type: "Portfolio",
				image: "https://user-images.githubusercontent.com/5182256/131216951-8f74f425-f775-463d-a11b-0e01ad9fce8d.png",
				}
			}}
			extend={{
				// extending the default link tags
				link: [{ rel: "icon", href: "/favicon.svg" }],
				// extending the default meta tags
				meta: [
				{
					name: "twitter:image",
					content: "https://user-images.githubusercontent.com/5182256/131216951-8f74f425-f775-463d-a11b-0e01ad9fce8d.png",
				},
				{ name: "twitter:title", content: title },
				{ name: "twitter:description", content: "Kaido Studio is a web design and development studio based in Manila, Philippines." },
				],
			}}
		/>

		<script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" is:inline></script>
		<script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" is:inline></script>
		<script src="https://unpkg.com/lenis@1.1.3/dist/lenis.min.js" is:inline></script> 
	</head>
	<body>
		<Preloader/>
		<Nav/>
		<slot />
		<CTA/>
		<Footer/>
	</body>
</html>

<style>
	body {
		background-image: url(/images/noise.webp);
		background-color: #1d229c;
	}
</style>

<script>
	//@ts-nocheck
	const lenis = new Lenis({
		lerp: 0.06
	})

	lenis.on('scroll', (e) => {
	console.log(e)
	})

	function raf(time) {
	lenis.raf(time)
	requestAnimationFrame(raf)
	}

	requestAnimationFrame(raf)
</script>
